/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.jpm_baloncesto;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author drank
 */
public class EjercicioBaloncestoExcel extends javax.swing.JFrame {
    private static String nombreJugador;
    private static Integer tirosDe2Realizados, tirosDe2Metidos, triplesRealizados, triplesMetidos, tirosLibresMetidos, tirosLibresRealizados;
    /**
     * Creates new form EjercicioBaloncestoExcel
     */
    public EjercicioBaloncestoExcel() {
        
        initComponents();
        setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("Estad√≠sticas Baloncesto");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        campoTextoJugador = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        numTirosDe2Metidos = new javax.swing.JSpinner();
        numTriplesMetidos = new javax.swing.JSpinner();
        numTriplesRealizados = new javax.swing.JSpinner();
        botonInsertar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        numTirosLibresRealizados = new javax.swing.JSpinner();
        numTirosLibresMetidos = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        numTirosDe2Realizados = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        campoTextoJugador.setToolTipText("Inserta el nombre");

        jLabel2.setText("Nombre Jugador:");

        jLabel3.setText("Tiros de 2 metidos:");

        jLabel4.setText("Triples metidos:");

        jLabel5.setText("Triples realizados:");

        numTirosDe2Metidos.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        numTirosDe2Metidos.setPreferredSize(new java.awt.Dimension(90, 25));

        numTriplesMetidos.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        numTriplesMetidos.setPreferredSize(new java.awt.Dimension(90, 25));

        numTriplesRealizados.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        numTriplesRealizados.setPreferredSize(new java.awt.Dimension(90, 25));

        botonInsertar.setText("Insertar Datos");
        botonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInsertarActionPerformed(evt);
            }
        });

        jLabel6.setText("Tiros libres metidos:");

        jLabel7.setText("Tiros libres realizados:");

        numTirosLibresRealizados.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        numTirosLibresRealizados.setPreferredSize(new java.awt.Dimension(90, 25));

        numTirosLibresMetidos.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        numTirosLibresMetidos.setPreferredSize(new java.awt.Dimension(90, 25));

        jLabel8.setText("Tiros de 2 realizados:");

        numTirosDe2Realizados.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        numTirosDe2Realizados.setPreferredSize(new java.awt.Dimension(90, 25));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(botonInsertar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoTextoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numTirosLibresMetidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numTirosLibresRealizados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numTirosDe2Metidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numTirosDe2Realizados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numTriplesMetidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numTriplesRealizados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 168, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campoTextoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(numTirosLibresMetidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(numTirosLibresRealizados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(numTirosDe2Metidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(numTirosDe2Realizados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(numTriplesMetidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(numTriplesRealizados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addComponent(botonInsertar)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInsertarActionPerformed
        nombreJugador = campoTextoJugador.getText();
        tirosLibresMetidos = (Integer) numTirosLibresMetidos.getValue();
        tirosLibresRealizados = (Integer) numTirosLibresRealizados.getValue();
        tirosDe2Metidos = (Integer) numTirosDe2Metidos.getValue();
        tirosDe2Realizados = (Integer) numTirosDe2Realizados.getValue();
        triplesMetidos = (Integer) numTriplesMetidos.getValue();
        triplesRealizados = (Integer) numTriplesRealizados.getValue();
        
        if (nombreJugador == null || nombreJugador.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Inserte un nombre.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if ((tirosDe2Metidos + triplesMetidos + tirosLibresMetidos) > (triplesRealizados + tirosDe2Realizados + tirosLibresRealizados)) {
            JOptionPane.showMessageDialog(this, "La suma de los tiros metidos no puede ser mayor a los tiros realizados.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        crearInforme(nombreJugador, tirosLibresMetidos, tirosLibresRealizados, tirosDe2Metidos, tirosDe2Realizados, triplesMetidos, triplesRealizados);
        JOptionPane.showMessageDialog(this, "Datos insertados.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_botonInsertarActionPerformed

    private static void crearInforme(String nombreJugador, Integer tirosLibresMetidos, Integer tirosLibresRealizados, Integer tirosDe2Metidos, Integer tirosDe2Realizados, Integer triplesMetidos, Integer triplesRealizados) {
        String nombreArchivo = "jugadores_baloncesto.xlsx";
        String nombreHoja = "Version1_5";
        boolean archivoExistente = verificarArchivoExistente(nombreArchivo);
         
        
        
        try (Workbook libroTrabajo = archivoExistente ? WorkbookFactory.create(new FileInputStream(nombreArchivo)) : new XSSFWorkbook()) {
            Sheet hoja = libroTrabajo.getSheet(nombreHoja);
            
            CellStyle estiloMain = libroTrabajo.createCellStyle();
            Font fuenteMain = libroTrabajo.createFont();
            fuenteMain.setBold(true);
            fuenteMain.setColor(IndexedColors.DARK_GREEN.getIndex());
            fuenteMain.setFontName("Calibri");
            estiloMain.setFont(fuenteMain);
            
            
            if (hoja == null) {
                hoja = libroTrabajo.createSheet(nombreHoja);
                Row fila = hoja.createRow(0);

                String[] encabezados = {
                    "Jugador", "Tiros libres metidos", "Tiros libres realizados",
                    "Tiros de 2 metidos", "Tiros de 2 realizados", "Triples metidos",
                    "Triples realizados", "FG%", "eFG%", "TS%"
                };

                for (int i = 0; i < encabezados.length; i++) {
                    Cell celda = fila.createCell(i);
                    celda.setCellValue(encabezados[i]);
                    celda.setCellStyle(estiloMain);
                }
            }
            
            // Borrar fila Media si ya existe
            for (int i = hoja.getPhysicalNumberOfRows() - 1; i >= 0; i--) {
                Row filaExistente = hoja.getRow(i);
                if (filaExistente != null && filaExistente.getCell(0) != null && filaExistente.getCell(0).getStringCellValue().equals("Media")) {
                    hoja.removeRow(filaExistente);
                }
            }
            
            CellStyle estilo = libroTrabajo.createCellStyle();
            Font fuente = libroTrabajo.createFont();
            fuente.setBold(true);
            fuente.setColor(IndexedColors.BLUE.getIndex());
            fuente.setFontName("Arial");
            estilo.setFont(fuente);
            estilo.setFillForegroundColor(IndexedColors.YELLOW.getIndex());
            estilo.setFillPattern(FillPatternType.SOLID_FOREGROUND);
            estilo.setAlignment(HorizontalAlignment.CENTER);
            estilo.setVerticalAlignment(VerticalAlignment.TOP);
            
            Double FG = ((double) (tirosDe2Metidos + triplesMetidos + tirosLibresMetidos) / (tirosDe2Realizados + triplesRealizados + tirosLibresRealizados)) * 100;
            Double eFG = (((tirosDe2Metidos + triplesMetidos + tirosLibresMetidos) + (0.5 * triplesMetidos)) / (tirosDe2Realizados + triplesRealizados + tirosLibresRealizados)) * 100;
            int puntosTotales = (2 * tirosDe2Metidos) + (3 * triplesMetidos) + tirosLibresMetidos;
            Double TS = (double) (puntosTotales / (2 * (tirosDe2Realizados + triplesRealizados + (0.44 * tirosLibresRealizados)))) * 100;
            
            int filaNumero = hoja.getPhysicalNumberOfRows();
            Row fila = hoja.createRow(filaNumero);
            Cell celda = fila.createCell(0, CellType.STRING);
            celda.setCellValue(nombreJugador);
            celda = fila.createCell(1, CellType.NUMERIC);
            celda.setCellValue(tirosLibresMetidos);
            celda = fila.createCell(2, CellType.NUMERIC);
            celda.setCellValue(tirosLibresRealizados);
            celda = fila.createCell(3, CellType.NUMERIC);
            celda.setCellValue(tirosDe2Metidos);
            celda = fila.createCell(4, CellType.NUMERIC);
            celda.setCellValue(tirosDe2Realizados);
            celda = fila.createCell(5, CellType.NUMERIC);
            celda.setCellValue(triplesMetidos);
            celda = fila.createCell(6, CellType.NUMERIC);
            celda.setCellValue(triplesRealizados);
            celda = fila.createCell(7, CellType.NUMERIC);
            celda.setCellValue(FG);
            celda = fila.createCell(8, CellType.NUMERIC);
            celda.setCellValue(eFG);
            celda = fila.createCell(9, CellType.NUMERIC);
            celda.setCellValue(TS);
            

            // Luego, crea la nueva fila de media en la √∫ltima posici√≥n
            Row filaMedia = hoja.createRow(hoja.getPhysicalNumberOfRows());
            Cell celdaMedia = filaMedia.createCell(0);
            celdaMedia.setCellValue("Media");
            celdaMedia.setCellStyle(estilo);

            // C√°lculo de medias
            for (int col = 1; col <= 9; col++) {
                double suma = 0;
                int filasDatos = hoja.getPhysicalNumberOfRows() - 1;
                for (int i = 1; i <= filasDatos; i++) {
                    Row filaActual = hoja.getRow(i);
                    if (filaActual == null) {
                        filaActual = hoja.createRow(i);  // Crea la fila si no existe
                    }
                    if (filaActual != null && filaActual.getCell(col) != null) {
                        suma += filaActual.getCell(col).getNumericCellValue();
                    }
                }
                double media = suma / (filasDatos - 1); // N√∫mero total de filas con datos
                Cell celdasMedia = filaMedia.createCell(col, CellType.NUMERIC);
                celdasMedia.setCellValue(media);
                celdasMedia.setCellStyle(estilo);
            }

                try (FileOutputStream archivoSalida = new FileOutputStream(nombreArchivo)) {
                    libroTrabajo.write(archivoSalida);
                    System.out.println("Datos agregados al archivo Excel correctamente.");
                }
            
        } catch (IOException e) {
                e.printStackTrace();
            }
        
        // Reabrir el archivo y leer los datos actualizados
        try (Workbook libroTrabajo = WorkbookFactory.create(new FileInputStream(nombreArchivo))) {
            Sheet hoja = libroTrabajo.getSheet(nombreHoja);
            int filaNumero = hoja.getPhysicalNumberOfRows();

            System.out.println("Datos actualizados en el archivo:");
            for (int i = 0; i < filaNumero; i++) {
                Row filab = hoja.getRow(i);
                if (filab != null) { // Verifica que la fila no est√© vac√≠a
                    for (int cellIndex = 0; cellIndex < filab.getLastCellNum(); cellIndex++) {
                        Cell celda = filab.getCell(cellIndex);

                        // Verifica si la celda contiene alg√∫n valor
                        if (celda != null) {
                            System.out.println("Valor encontrado en hoja " + hoja.getSheetName() + ", fila " + (i + 1) + ", columna " + (cellIndex + 1) + ": " + celda.toString());
                        }
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private static boolean verificarArchivoExistente(String nombreArchivo) {
        return new File(nombreArchivo).exists();
    }
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EjercicioBaloncestoExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EjercicioBaloncestoExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EjercicioBaloncestoExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EjercicioBaloncestoExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EjercicioBaloncestoExcel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonInsertar;
    private javax.swing.JTextField campoTextoJugador;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner numTirosDe2Metidos;
    private javax.swing.JSpinner numTirosDe2Realizados;
    private javax.swing.JSpinner numTirosLibresMetidos;
    private javax.swing.JSpinner numTirosLibresRealizados;
    private javax.swing.JSpinner numTriplesMetidos;
    private javax.swing.JSpinner numTriplesRealizados;
    // End of variables declaration//GEN-END:variables
}
